
# Задача

# Є декілька мережевих кабелів різної довжини, їх потрібно об'єднати по два за раз в один кабель, 
# використовуючи з'єднувачі, у порядку, який призведе до найменших витрат. 
# Витрати на з'єднання двох кабелів дорівнюють їхній сумі довжин, 
# а загальні витрати дорівнюють сумі з'єднання всіх кабелів.
# Завдання полягає в тому, щоб знайти порядок об'єднання, який мінімізує загальні витрати.

# Розвязок

# 1. Створюємо функцію де використовуємо heapq.heapify(cable_lengths) для перетворення списку у мінімальну купу
# 2. Використовуємо цикл while, де беремо два найменші кабелі 
# 3. Знаходимо витрати та ставимо новий з'єднаний кабель до купи
# 4. Процес повторюємо поки не залишиться один кабель, рахуємо загальні витрати

import heapq

def min_cost_to_connect_cables(cable_lengths):
    if not cable_lengths:
        return 0

    # Створюємо мін-купу з довжин кабелів
    heapq.heapify(cable_lengths)
    total_cost = 0

# До поки у купі більше ніж один кабель ми:
    while len(cable_lengths) > 1:
        # Витягуємо два найменші кабелі
        first = heapq.heappop(cable_lengths)
        second = heapq.heappop(cable_lengths)

        # Обчислюємо витрати на з'єднання
        current_cost = first + second
        total_cost += current_cost

        # Додаємо новий з'єднаний кабель назад до купи
        heapq.heappush(cable_lengths, current_cost)

    return total_cost

# Приклад:
cable_lengths = [17, 21, 36, 74]
total_cost = min_cost_to_connect_cables(cable_lengths)
print(f"Загальні витрати на зєднання кабелів: {total_cost}")